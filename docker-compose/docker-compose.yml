services:
  kafka:
    image: docker.io/bitnami/kafka:3.7 # Sử dụng image bitnami/kafka
    healthcheck:
      test: kafka-topics.sh --list --bootstrap-server localhost:9092 || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
    ports:
      - "9092:9092"
    volumes:
      - ./kafka_data:/bitnami
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=3
      - KAFKA_CFG_TRANSACTION_STATE_LOG_MIN_ISR=2
    networks:
      - didan

  paymentdb:
    image: mysql:8.0
    container_name: paymentdb
    ports:
      - "3305:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: paymentdb
      MYSQL_USER: payment
      MYSQL_PASSWORD: 17052002
    networks:
      - didan

  accountdb:
    image: mysql:8.0
    container_name: accountdb
    ports:
      - "3304:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: accountdb
      MYSQL_USER: account
      MYSQL_PASSWORD: 17052002
    networks:
      - didan

  quarkus-payment:
    image: dannguyenmessi/quarkus-payment:v1
    ports:
      - "8080:8080"
    environment:
      QUARKUS_APPLICATION_NAME: quarkus-payment
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DATABASE_HOST: paymentdb
      DATABASE_PORT: 3306
      DATABASE_NAME: paymentdb
      DATABASE_USERNAME: payment
      DATABASE_PASSWORD: 17052002
      QUARKUS_REST_CLIENT_TRANSACTION_API_URL: http://quarkus-account-transaction:8090
    depends_on:
      paymentdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - didan

  quarkus-account-transaction:
    image: dannguyenmessi/quarkus-account-transaction:v1
    ports:
      - "8090:8090"
    environment:
      QUARKUS_APPLICATION_NAME: quarkus-account-transaction
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DATABASE_HOST: accountdb
      DATABASE_PORT: 3306
      DATABASE_NAME: accountdb
      DATABASE_USERNAME: account
      DATABASE_PASSWORD: 17052002
    depends_on:
      accountdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - didan

  spring-payment:
    image: dannguyenmessi/spring-payment:v1
    ports:
      - "9000:9000"
    environment:
      SPRING_APPLICATION_NAME: spring-payment
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DATABASE_HOST: paymentdb
      DATABASE_PORT: 3306
      DATABASE_NAME: paymentdb
      DATABASE_USERNAME: payment
      DATABASE_PASSWORD: 17052002
      CLIENT_ENDPOINT_ACCOUNT_TRANSACTION: spring-account-transaction:9010
      CLIENT_PROTOCOL: http
    depends_on:
      paymentdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - didan

  spring-account-transaction:
    image: dannguyenmessi/spring-account-transaction:v1
    ports:
      - "9010:9010"
    environment:
      SPRING_APPLICATION_NAME: spring-account-transaction
      KAFKA_HOST: kafka
      KAFKA_PORT: 9092
      DATABASE_HOST: accountdb
      DATABASE_PORT: 3306
      DATABASE_NAME: accountdb
      DATABASE_USERNAME: account
      DATABASE_PASSWORD: 17052002
    depends_on:
      accountdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - didan

networks:
  didan:
    driver: bridge