quarkus.datasource.jdbc=true
quarkus.datasource.devservices.enabled=false
quarkus.datasource.db-kind=mysql
quarkus.datasource.jdbc.url=jdbc:mysql://${database.host}:${database.port}/${database.name}
quarkus.datasource.username=${database.username}
quarkus.datasource.password=${database.password}
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.jdbc.min-size=2
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=true
quarkus.http.port=8080
quarkus.rest-client.transaction-api.url=http://localhost:8090

# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=http://${kafka.host}:${kafka.port}

# Configuring the incoming channel (reading from Kafka)
#mp.messaging.incoming.payment-in.connector=smallrye-kafka
#mp.messaging.incoming.payment-in.topic=payment
#mp.messaging.outgoing.payment-in.value.deserializer=org.didan.config.TransactionRequestDeserializer
# Group "payment-in" is used to ensure that only one instance of the service processes a message

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.payment-out.connector=smallrye-kafka
mp.messaging.outgoing.payment-out.topic=payment
mp.messaging.outgoing.payment-out.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


kafka.host: localhost
kafka.port: 9092

database.host: localhost
database.port: 3306
database.name: quarkus_payment
database.username: root
database.password: 17052002